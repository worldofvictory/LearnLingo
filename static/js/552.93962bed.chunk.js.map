{"version":3,"file":"static/js/552.93962bed.chunk.js","mappings":"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","sources":["components/Layout/Layout.styled.js","components/Loader/Loader.jsx","components/AuthForms/Auth.styled.js","components/AuthForms/RegisterForm.jsx","components/AuthForms/LoginForm.jsx","components/Layout/Layout.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Modal/useModal.js","components/Schemas/Schemas.jsx","firebase/firebase.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Header = styled.header`\n  padding: 20px 64px 15px 64px;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  row-gap: 20px;\n`;\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ImgLogo = styled.img``;\n\nexport const TitleLogo = styled.p`\n  color: var(--main-text-color);\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.2;\n  letter-spacing: -0.4px;\n`;\n\nexport const Nav = styled.nav``;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 28px;\n`;\n\nexport const Navigate = styled(NavLink)`\n  color: var(--main-text-color);\n  font-size: 16px;\n  line-height: 1.25;\n  transition: color var(--transition);\n\n  &:hover,\n  :focus {\n    color: var(--active-color);\n  }\n\n  &.active {\n    color: #8a8a89;\n  }\n`;\n\nexport const WrapperAut = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const ButtonLogin = styled.button`\n  cursor: pointer;\n  color: var(--main-text-color);\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.25;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-decoration-color: transparent;\n  transition: text-decoration var(--transition),\n    text-decoration-color var(--transition);\n\n  & span {\n    display: inherit;\n    transition: color var(--transition);\n  }\n\n  &:hover,\n  :focus {\n    & span {\n      color: var(--active-color);\n    }\n    text-decoration: underline;\n    text-underline-position: under;\n    text-decoration-color: var(--active-color);\n  }\n`;\n\nexport const ButtonRegister = styled.button`\n  border-radius: 12px;\n  padding: 14px 39px;\n  width: 166px;\n  height: 48px;\n  background-color: #121417;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.25;\n  color: #fff;\n  white-space: nowrap;\n\n\n  &:hover,\n  :focus {\n    background-color: var( --hoverBt);\n    color: var(--main-text-color);\n  }\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Loaders } from \"./Loader.styled\";\n\nexport default function Loader() {\n  return (\n    <Loaders>\n      <RotatingLines\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n        color=\"black\"\n        ariaLabel=\"rotating-lines-loading\"\n        strokeColor=\"#f4c550\"\n      />\n    </Loaders>\n  );\n}","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n  width: 566px;\n  max-width: 100%;\n  padding: 64px;\n`;\n\nexport const Title = styled.h3`\n  color: var(--main-text-color);\n  font-size: 40px;\n  font-weight: 500;\n  line-height: 1.2;\n  letter-spacing: -0.8px;\n`;\n\nexport const Description = styled.p`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  color: rgba(18, 20, 23, 0.8);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.37;\n`;\n\nexport const Form = styled.form`\n  display: block;\n`;\n\nexport const Input = styled.input`\n  border-radius: 12px;\n  width: 100%;\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  padding: 16px 18px;\n  color: var(--main-text-color);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.37;\n  display: block;\n  outline: none;\n  transition: border var(--transition);\n\n  &::placeholder {\n    color: var(--main-text-color);\n  }\n  &:focus {\n    border: 1px solid var(--active-button-background-color);\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  color: #ff0000c2;\n  margin-top: 5px;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.37;\n`;\n\nexport const InputWrapper = styled.div`\n  &:not(:first-child) {\n    margin-top: 18px;\n  }\n`;\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n`;\n\nexport const PasswordVisibility = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 50%;\n  right: 18px;\n  transform: translateY(-50%);\n  color: var(--main-text-color);\n  transition: color var(--transition);\n  background-color: transparent;\n  border: none;\n\n  &:hover,\n  :focus {\n    color: var(--active-color);\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: block;\n  color: var(--main-text-color);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 28px;\n\n  border-radius: 12px;\n  background-color: var(--button-background-color);\n  border: none;\n  width: 100%;\n  padding: 16px 0;\n  margin: 40px auto 0;\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--active-button-background-color);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addToken } from '../../redux/SliceAuth';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\nimport Schemas from \"../Schemas/Schemas\";\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase/firebase';\nimport { Formik } from 'formik';\nimport { FormWrapper, Title, Description, ErrorMessage, Input, InputWrapper, Form, PasswordWrapper, PasswordVisibility, Button  } from \"./Auth.styled\";\nexport const RegisterForm = ({ onClose }) => {\n  const [visibility, setVisibility] = useState(false);\n  const dispatch = useDispatch();\n\n  const handelSubmit = async values => {\n    const { email, password } = values;\n    try {\n      const result = await createUserWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      // await addDoc(collection(db, 'users'), {\n      //   name,\n      //   email,\n      //   id: result.user.uid,\n      // });\n\n      dispatch(addToken(result.user.accessToken));\n      onClose();\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <Title>Registration</Title>\n      <Description>\n        Thank you for your interest in our platform! In order to register, we\n        need some information. Please provide us with the following information\n      </Description>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={Schemas}\n        onSubmit={handelSubmit}\n      >\n        {({\n          errors,\n          touched,\n          handleSubmit,\n          isSubmitting,\n          handleBlur,\n          handleChange,\n          values,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <InputWrapper>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n              />\n              {errors.name && touched.name ? (\n                <ErrorMessage>* {errors.name}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <InputWrapper>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.email}\n              />\n              {errors.email && touched.email ? (\n                <ErrorMessage>* {errors.email}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <InputWrapper>\n              <PasswordWrapper>\n                <Input\n                  name=\"password\"\n                  type={visibility ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.password}\n                />\n                <PasswordVisibility\n                  type=\"button\"\n                  onClick={() => setVisibility(!visibility)}\n                >\n                  {visibility ? <FiEye /> : <FiEyeOff />}\n                </PasswordVisibility>\n              </PasswordWrapper>\n              {errors.password && touched.password ? (\n                <ErrorMessage>* {errors.password}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </FormWrapper>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { auth } from '../../firebase/firebase';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport {\n  Description,\n  ErrorMessage,\n  Form,\n  FormWrapper,\n  Input,\n  Title,\n  Button,\n  PasswordVisibility,\n  InputWrapper,\n  PasswordWrapper,\n} from './Auth.styled';\nimport Schemas from \"../Schemas/Schemas\";\nimport { addToken } from '../../redux/SliceAuth';\n\nexport const Login = ({ onClose }) => {\n  const [visibility, setVisibility] = useState(false);\n  const dispatch = useDispatch();\n\n  const handelSubmit = async values => {\n    const { email, password } = values;\n    try {\n      const credentials = await signInWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n\n      dispatch(addToken(credentials.user.accessToken));\n      onClose();\n      return credentials.user;\n    } catch (error) {\n      toast.error(\n        'Oops something went wrong',\n      );\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <Title>Log In</Title>\n      <Description>\n        Welcome back! Please enter your credentials to access your account and\n        continue your search for an teacher.\n      </Description>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={Schemas}\n        onSubmit={handelSubmit}\n      >\n        {({\n          errors,\n          touched,\n          handleSubmit,\n          isSubmitting,\n          handleBlur,\n          handleChange,\n          values,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <InputWrapper>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.email}\n              />\n              {errors.email && touched.email ? (\n                <ErrorMessage>* {errors.email}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <InputWrapper>\n              <PasswordWrapper>\n                <Input\n                  name=\"password\"\n                  type={visibility ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.password}\n                />\n                <PasswordVisibility\n                  type=\"button\"\n                  onClick={() => setVisibility(!visibility)}\n                >\n                  {visibility ? <FiEyeOff /> : <FiEye />}\n                </PasswordVisibility>\n              </PasswordWrapper>\n              {errors.password && touched.password ? (\n                <ErrorMessage>* {errors.password}</ErrorMessage>\n              ) : null}\n            </InputWrapper>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Log In\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </FormWrapper>\n  );\n};\n","//import { Container } from '../../assets/global.Styles';\nimport { Outlet } from 'react-router-dom';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Suspense, useEffect, useState } from 'react';\nimport ukraine from '../../assets/img/ukraine.jpg';\nimport {\n  ButtonLogin,\n  ButtonRegister,\n  Header,\n  HeaderContainer,\n  ImgLogo,\n  List,\n  Nav,\n  Navigate,\n  TitleLogo,\n  WrapperAut,\n  WrapperLogo,\n} from './Layout.styled';\nimport  Loader  from '../Loader/Loader';\nimport { useModal } from '../Modal/useModal';\nimport { ModalComponent } from '../../components/Modal/Modal';\nimport { RegisterForm } from '../AuthForms/RegisterForm';\nimport { Login } from '../AuthForms/LoginForm';\nimport { auth } from '../../firebase/firebase';\nimport { signOut } from 'firebase/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteToken } from '../../redux/SliceAuth';\n\nconst Layout = () => {\n  const { isOpen, openModal, closeModal } = useModal();\n  const [user, setUser] = useState(null);\n  const authUser = useSelector(state => state.authUser.token);\n  const dispatch = useDispatch();\n\n  const clickLogOut = async () => {\n    try {\n      await signOut(auth);\n      setUser(null);\n\n      dispatch(deleteToken());\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    auth.onAuthStateChanged(maybeUser => {\n      const user = auth.currentUser;\n\n      if (authUser || user) {\n        return setUser(maybeUser);\n      }\n      return;\n    });\n  }, [authUser]);\n\n  return (\n    <>\n      <Header>\n       \n          <HeaderContainer>\n            <WrapperLogo>\n              <ImgLogo\n                src={ukraine}\n                alt=\"Flag Ukraine\"\n                width=\"28\"\n                height=\"28\"\n              />\n              <TitleLogo>LearnLingo</TitleLogo>\n            </WrapperLogo>\n            <Nav>\n              <List>\n                <li>\n                  <Navigate activeclassname=\"active\" to=\"/\">\n                    Home\n                  </Navigate>\n                </li>\n                <li>\n                  <Navigate to=\"teachers\">Teachers</Navigate>\n                </li>\n                {authUser && (\n                  <li>\n                    <Navigate to=\"favorite\">Favorite</Navigate>\n                  </li>\n                )}\n              </List>\n            </Nav>\n            {!authUser && (\n              <WrapperAut>\n                <li>\n                  <ButtonLogin type=\"button\" onClick={() => openModal('login')}>\n                    <span>\n                      <FiLogIn />\n                    </span>\n                    Log in\n                  </ButtonLogin>\n                </li>\n                <li>\n                  <ButtonRegister\n                    type=\"button\"\n                    onClick={() => openModal('register')}\n                  >\n                    Register\n                  </ButtonRegister>\n                </li>\n              </WrapperAut>\n            )}\n            {authUser && user && (\n              <ButtonRegister type=\"button\" onClick={clickLogOut}>\n                Log out\n              </ButtonRegister>\n            )}\n          </HeaderContainer>\n        \n        {isOpen.open && isOpen.name === 'login' && (\n          <ModalComponent onClose={closeModal}>\n            <Login onClose={closeModal} />\n          </ModalComponent>\n        )}\n        {isOpen.open && isOpen.name === 'register' && (\n          <ModalComponent onClose={closeModal}>\n            <RegisterForm onClose={closeModal} />\n          </ModalComponent>\n        )}\n      </Header>\n      <main>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n    </>\n  );\n};\n\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(\n    90deg,\n    rgb(116 115 115) 0%,\n    rgb(83 81 81 / 32%) 0%\n  );\n  backdrop-filter: blur(0.1rem);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  background-color: #fff;\n  border-radius: 30px;\n  overflow: hidden;\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  transition: color var(--transition);\n  color: #121417;\n  &:hover,\n  :focus {\n    color: var(--active-button-background-color);\n  }\n\n  & svg {\n    width: 32px;\n    height: 32px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { ButtonClose, Modal, Overlay } from './Modal.styled';\nimport { createPortal } from 'react-dom';\n\n\n\nexport const ModalComponent = ({ children, onClose }) => {\n  const onClickOverlay = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n\n\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Overlay onClick={onClickOverlay}>\n      <Modal>\n        <ButtonClose type=\"button\" onClick={onClose}>\n          <AiOutlineClose />\n        </ButtonClose>\n        {children}\n      </Modal>\n    </Overlay>,\n   document.getElementById('modal')\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport const useModal = () => {\n  const [isOpen, setIsOpen] = useState({\n    name: '',\n    open: false,\n  });\n\n  const openModal = name => {\n    setIsOpen({ name, open: true });\n  };\n\n  const closeModal = () => {\n    setIsOpen({ name: '', open: false });\n  };\n\n  useEffect(() => {\n    if (isOpen.open) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n  }, [isOpen]);\n\n  return {\n    isOpen,\n    openModal,\n    closeModal,\n  };\n};","import * as yup from 'yup';\n\nconst Schema = yup.object({\n  name: yup\n    .string()\n    .trim()\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be no more than 32 characters')\n    .matches(\n      /^[a-zA-Z0-9\\s]*$/,\n      'Name can only contain letters, numbers, and spaces'\n    ),\n  email: yup\n    .string()\n    .trim()\n    .email()\n    .required('Email is required')\n    .matches(\n      /^[a-zA-Z0-9.-_]+@[a-zA-Z]+\\.[a-zA-Z]{2,3}$/,\n      'Invalid email format'\n    ),\n  password: yup\n    .string()\n    .trim()\n    .required('Password is required')\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be no more than 64 characters')\n    .test(\n      'no-spaces',\n      'Password cannot contain spaces',\n      value => !/\\s/.test(value)\n    ),\n});\n\nexport default Schema;","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase } from 'firebase/database';\nimport { getAuth } from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBHIwW1HbsRMOxblg_vwyaMMxOfytuUXsE\",\n  authDomain: \"learn-lingo-167d4.firebaseapp.com\",\n  databaseURL: \"https://learn-lingo-167d4-default-rtdb.firebaseio.com\",\n  projectId: \"learn-lingo-167d4\",\n  storageBucket: \"learn-lingo-167d4.appspot.com\",\n  messagingSenderId: \"887447598415\",\n  appId: \"1:887447598415:web:3069a0a8a0bd7f7cc6013a\",\n  measurementId: \"G-2TE579NL7D\"\n};\n\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\n\nexport const database = getDatabase();"],"names":["Header","styled","_templateObject","_taggedTemplateLiteral","HeaderContainer","_templateObject2","WrapperLogo","_templateObject3","ImgLogo","_templateObject4","TitleLogo","_templateObject5","Nav","_templateObject6","List","_templateObject7","Navigate","NavLink","_templateObject8","WrapperAut","_templateObject9","ButtonLogin","_templateObject10","ButtonRegister","_templateObject11","Loader","_jsx","Loaders","children","RotatingLines","strokeWidth","animationDuration","width","visible","color","ariaLabel","strokeColor","FormWrapper","Title","Description","Form","Input","ErrorMessage","InputWrapper","PasswordWrapper","PasswordVisibility","Button","RegisterForm","_ref","onClose","_useState","useState","_useState2","_slicedToArray","visibility","setVisibility","dispatch","useDispatch","handelSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","email","password","result","_context","prev","next","createUserWithEmailAndPassword","auth","sent","addToken","user","accessToken","abrupt","t0","stop","_x","apply","arguments","_jsxs","Formik","initialValues","name","validationSchema","Schemas","onSubmit","_ref3","errors","touched","handleSubmit","isSubmitting","handleBlur","handleChange","type","placeholder","onChange","onBlur","value","onClick","FiEye","FiEyeOff","disabled","Login","credentials","signInWithEmailAndPassword","toast","_useModal","useModal","isOpen","openModal","closeModal","setUser","authUser","useSelector","state","token","clickLogOut","signOut","deleteToken","useEffect","maybeUser","_Fragment","src","alt","height","activeclassname","to","FiLogIn","open","ModalComponent","Suspense","fallback","Outlet","Overlay","Modal","ButtonClose","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","AiOutlineClose","document","getElementById","setIsOpen","body","style","overflow","Schema","yup","trim","min","max","matches","required","test","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","database","getDatabase"],"sourceRoot":""}